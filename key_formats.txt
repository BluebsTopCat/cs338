-----RSA PUBLIC KEY UNPEMMED-----
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDJfXgH2kSYEOSnVRE8m84UlBQ/xkZZLHlwsY96XJVq2o67tsatXiw0bPGcdM9dgHss6mWILJzuV/wv7XXtV2qRzC9oPy4O7zeupRu3/VnKBa/44b/1P4gQByNq4RmIWxDR2NSuOEa2fjavOcoj3Rsyso2xGee4Cf75DDmqaHJ3xsD0K7KKi3bM7LmqnatM41K2M3iulksZ+2a9y6qA0WdBeobDGrAuild5HecmFab4rWwLc/+HvyLhgw1X7ii/NFQ6FnjqzCM1fTeJix2tNrEG9woIDTIJeaacrTfj1HW6X/Pa2VbMnTG0ZtQAtfsZs1HMrX2Ma2hxdEZpb2q5L+f2ivzDVh5bjVVfAiFlmK8PCqS9EWSuE5tWd1GWZpmqupW+r8k4CL16FZlu4HwU22dxJGL/2JaMAjg5JOyA7RIlA/A1LmNs0hXlUhdq4EB+xxFN5e05GaNdjTy5U8d4pxF7X2PU8EFvIBmFTjEPMdygc2vb0VE45vh4EYU0msigSgk= badid@Jane_Laptop
-----END THAT THING THIS IS NOT ACTUALLY A HEADER/FOOTER YOU FOOl------

-----BEGIN RSA PUBLIC KEY-----
MIIBigKCAYEAyX14B9pEmBDkp1URPJvOFJQUP8ZGWSx5cLGPelyVatqOu7bGrV4s
NGzxnHTPXYB7LOpliCyc7lf8L+117VdqkcwvaD8uDu83rqUbt/1ZygWv+OG/9T+I
EAcjauEZiFsQ0djUrjhGtn42rznKI90bMrKNsRnnuAn++Qw5qmhyd8bA9Cuyiot2
zOy5qp2rTONStjN4rpZLGftmvcuqgNFnQXqGwxqwLopXeR3nJhWm+K1sC3P/h78i
4YMNV+4ovzRUOhZ46swjNX03iYsdrTaxBvcKCA0yCXmmnK0349R1ul/z2tlWzJ0x
tGbUALX7GbNRzK19jGtocXRGaW9quS/n9or8w1YeW41VXwIhZZivDwqkvRFkrhOb
VndRlmaZqrqVvq/JOAi9ehWZbuB8FNtncSRi/9iWjAI4OSTsgO0SJQPwNS5jbNIV
5VIXauBAfscRTeXtORmjXY08uVPHeKcRe19j1PBBbyAZhU4xDzHcoHNr29FROOb4
eBGFNJrIoEoJAgMBAAE=
-----END RSA PUBLIC KEY-----


-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----


---PRIVATE KEY---
For this key, I'd expect a version, modulus, private and public exponent, two primes, two exponents (one the private exponent moduloed by one prime minus one and one by the other prime minus one), a coefficient (the inverse of the second prime mod the first), and maybe some other information.
To extract the information, I used the ASN.1 decoder. It dumps the base64 into hex, then reads it back out into the individual values, of which each section past the version starts with 02 81 

The Version is 0, as it should be unless the hex had been generated with multiprime.

The Modulus is 
(3072 bit) 4572570965516704082983222202700082466914398784203520351217794816556663034119741064857119649896846209299140744640906843244273432519391265998850161185930489467937403522108168016320799180288477294469856517064671215264984666578399464826378430307891450123699260086851898734738141058887736635578464914608564370109651551081428028576024113827315819855499520880642058288518694883183239383759592908457805083969430454383380551868109180725369208100926312429430235987399618934994208141673966052089787681551554459145016345407882714012877667930759593375611823320099028250031594995168141829897285252427632044026593027922000859176560233533949944464917360556946618350509179393181136707604414513604971249309786833496925428712501813895141868340066009999867035628577288339653876362321210136350871625380917913053132167569817069572892746249876922985328514001895258158472217102079855474553298067419673338026564785872441447419054309635577184344099337
This is rather long. It's the same number as the public key, used to modulos the exponent of the integer to find the solution. 
I can't demonstrate this is right until I also decode the public key, so trust me until then! 

The Public Exponent is 65537.
This is rather short, comparatively. These two pieces make up the public key, and so you can always recreate the public key given a private.

The Private Expontent is (3067 bit) 112191496598118012198254746203545060146151841631433552417080642461862980589049599955601391535073755352747582546997546484227103460505991359478631295100114852136096325183483134263757039258798411424195939384469708930010457357798897408194096707738978772279909214942061021491049801222080359339154547548569075592967631935226456352140726231507756508958957986726161248271023412303868790592877693467814373178858418460541006262171285878303762555904138278934400712082313612776685969998518233003809583733189262645296178781940281645926334194541959730527337919591802853565280116093189620831419109979232181076988109459640881470468686030716081227678507232521395368510314299909961352295281195222603621117954856739029359838572259523943007352355531231719549316498877297836429254934226092652588169902771358185561994096371070033746189902312932917405832699097410039199318083949687651323250210581679431682193255573200970545911994731168028492804897
This is used to decrypt messages encrypted with the public exponent.

The Two Primes, P and q, 
(1536 bit) 2406555049246551564381992796729778069831117786729257316929693926478033763508339033985411880505272538319630567306567348260138684165987794198244658868965848742565942331436818559375969819429932957875911284669412732296429582873986702471296312193796406524790464100808928419580724583653971489479377248266063743707670351905765212748818808407021902036819915547524240572967012300139469348731563757214765603558581014029210826583962265313721937338837238247789589427596885659
and 
(1536 bit) 1900048356237806629268324307009571970169137570599010821070077918002665870377490360705154819626532835924045430132516059995579408418310832579890971064259152861369102255180856059577895525123274935277718149833355958528553638675567233960393544108211797918196311553071358703396005571654091544215807682772486088671110450757602069280274636940215905818324106522340137168048150755155493719290710879496884724798576855523972823797499685423331553855679182729323252008405824043
are the prime factorization of the modulus. These are used to calculate the private and public keys, and are kept for use in the chinese Remainder Theorum, which is Optimal for decoding compared to using the full prime.

The Two Exponents,
(1536 bit) 2389186226470202038313471463851355422669512606249178297278081169909620348641325829794266423443170307356583963733989928547197206869033215461717663070485282856803187082908969936787434583996660786597468480792997391002561825840564426348359297138672343777239830267711859235112993641925355158025027103486323319965757721232230767387722156189549003374027663536385815472779127642343629304146824912635938618336748937192678536107220666651998170972337856010409110067857298449
and 
(1536 bit) 1333747723886721335625066625260056897869310539051785919595157919034967128505211812470511959993576400870497367407972119932811009122724133573482219705512581720774893268647330548618665879392879444016603533346563124893534668868437600609029168304227772882931826551222893720967237443251519407359262960438614065691529444079721769308478483876248417401867375626802198304452250291288483346235712090885678088402486071402793014419033149643940748029001405652986662273138860937
are the next step in creating the keys, each the private exponent moduloed by one of the two primes minus one. These are also secret because they can be used to calculate the private key.

The Coefficient,
(1536 bit)
1433850946148707225090908524642647354670161074103488471372001765759563236996024581478720714833115040404671995146651585159515808328623715240047436935531920817710081700279513385654543563248822401342314408427428087636975485031126940553691541571992855036102369037826859634587909315508292685804049153957097781370601283055493576166490225319186997294218664643977452778010422730144147729175945636914519848273053317384059627815045124534899890283281388303349216551085307362
is the inverse of one prime modulo'd by the other, and a demonstration that the p and q have a greatest common divisor of 1.

---PUBLIC KEY---
For the public key, I expect the modulus, then the public exponent. I decoded this file by converting it from a pub to a PEM with ssh-keygen, then plugging it into the same tools as before.

The first number I got was the modulus,

It matches!! these two keys are a pair.
The Second number I got was the public exponent, which was 65537.
It also matches!!

---SANITY CHECK---

To test these values, I plugged them into a series of python print statements as follows: 

print(p * q == mod)
print(priv % (p-1) == exp1)
print(priv % (q-1) == exp2)
print((pub * priv) % math.lcm(p-1, q-1) == 1)
print(coef == pow(q, -1, p))

All returned true, so this RSA key is valid and complete.
